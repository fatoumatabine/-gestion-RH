
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  role: 'role',
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  twoFactorEnabled: 'twoFactorEnabled',
  twoFactorSecret: 'twoFactorSecret',
  lastLogin: 'lastLogin',
  permissions: 'permissions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  entrepriseId: 'entrepriseId',
  employeeId: 'employeeId',
  department: 'department',
  position: 'position',
  contractType: 'contractType',
  salary: 'salary',
  dailyRate: 'dailyRate',
  hourlyRate: 'hourlyRate',
  hireDate: 'hireDate',
  phone: 'phone',
  address: 'address',
  status: 'status',
  qrCode: 'qrCode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EntrepriseScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  adresse: 'adresse',
  telephone: 'telephone',
  email: 'email',
  siteWeb: 'siteWeb',
  logo: 'logo',
  couleurPrimaire: 'couleurPrimaire',
  couleurSecondaire: 'couleurSecondaire',
  couleurDashboard: 'couleurDashboard',
  description: 'description',
  devise: 'devise',
  timezone: 'timezone',
  periodePayroll: 'periodePayroll',
  estActive: 'estActive',
  parametres: 'parametres',
  creeLe: 'creeLe',
  modifieLe: 'modifieLe'
};

exports.Prisma.JournalAuditScalarFieldEnum = {
  id: 'id',
  utilisateurId: 'utilisateurId',
  action: 'action',
  nomTable: 'nomTable',
  idEnregistrement: 'idEnregistrement',
  anciennes_valeurs: 'anciennes_valeurs',
  nouvelles_valeurs: 'nouvelles_valeurs',
  creeLe: 'creeLe'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  employeeId: 'employeeId',
  amount: 'amount',
  paymentDate: 'paymentDate',
  paymentMethod: 'paymentMethod',
  reference: 'reference',
  status: 'status',
  notes: 'notes',
  processedBy: 'processedBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  message: 'message',
  type: 'type',
  category: 'category',
  isRead: 'isRead',
  link: 'link',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyFactureScalarFieldEnum = {
  id: 'id',
  employeeId: 'employeeId',
  numeroFacture: 'numeroFacture',
  montant: 'montant',
  description: 'description',
  statut: 'statut',
  dateEcheance: 'dateEcheance',
  datePaiement: 'datePaiement',
  creePar: 'creePar',
  creeLe: 'creeLe',
  modifieLe: 'modifieLe'
};

exports.Prisma.CompanyLigneFactureScalarFieldEnum = {
  id: 'id',
  factureId: 'factureId',
  description: 'description',
  quantite: 'quantite',
  prixUnitaire: 'prixUnitaire',
  prixTotal: 'prixTotal',
  creeLe: 'creeLe'
};

exports.Prisma.CompanyPayRunScalarFieldEnum = {
  id: 'id',
  reference: 'reference',
  dateDebut: 'dateDebut',
  dateFin: 'dateFin',
  datePaiement: 'datePaiement',
  statut: 'statut',
  totalBrut: 'totalBrut',
  totalNet: 'totalNet',
  totalDeductions: 'totalDeductions',
  nombreEmployes: 'nombreEmployes',
  metadata: 'metadata',
  entrepriseId: 'entrepriseId',
  periodePaieId: 'periodePaieId',
  creePar: 'creePar',
  creeLe: 'creeLe',
  approuveLe: 'approuveLe',
  approuvePar: 'approuvePar'
};

exports.Prisma.CompanyBulletinScalarFieldEnum = {
  id: 'id',
  numeroBulletin: 'numeroBulletin',
  datePaiement: 'datePaiement',
  joursTravailles: 'joursTravailles',
  heuresTravailes: 'heuresTravailes',
  salaireBrut: 'salaireBrut',
  salaireBase: 'salaireBase',
  montantHeuresSupp: 'montantHeuresSupp',
  montantBonus: 'montantBonus',
  indemnites: 'indemnites',
  deductions: 'deductions',
  totalDeductions: 'totalDeductions',
  salaireNet: 'salaireNet',
  montantPaye: 'montantPaye',
  resteAPayer: 'resteAPayer',
  statutPaiement: 'statutPaiement',
  cheminPDF: 'cheminPDF',
  calculs: 'calculs',
  estVerrouille: 'estVerrouille',
  payRunId: 'payRunId',
  employeId: 'employeId',
  creeLe: 'creeLe',
  modifieLe: 'modifieLe'
};

exports.Prisma.CompanyPaiementScalarFieldEnum = {
  id: 'id',
  referenceTransaction: 'referenceTransaction',
  montant: 'montant',
  methodePaiement: 'methodePaiement',
  referencePaiement: 'referencePaiement',
  datePaiement: 'datePaiement',
  notes: 'notes',
  cheminRecu: 'cheminRecu',
  statut: 'statut',
  metadata: 'metadata',
  bulletinId: 'bulletinId',
  traitePar: 'traitePar',
  creeLe: 'creeLe'
};

exports.Prisma.CompanyTemplateScalarFieldEnum = {
  id: 'id',
  typeTemplate: 'typeTemplate',
  nom: 'nom',
  contenu: 'contenu',
  variables: 'variables',
  estDefaut: 'estDefaut',
  estActif: 'estActif',
  entrepriseId: 'entrepriseId',
  creeLe: 'creeLe',
  modifieLe: 'modifieLe'
};

exports.Prisma.CompanySettingScalarFieldEnum = {
  id: 'id',
  cle: 'cle',
  valeur: 'valeur',
  description: 'description',
  typeData: 'typeData',
  estEncrypte: 'estEncrypte',
  entrepriseId: 'entrepriseId',
  modifieLe: 'modifieLe'
};

exports.Prisma.CompanyDocumentScalarFieldEnum = {
  id: 'id',
  type: 'type',
  titre: 'titre',
  description: 'description',
  cheminFichier: 'cheminFichier',
  tailleFichier: 'tailleFichier',
  mimeType: 'mimeType',
  metadata: 'metadata',
  tags: 'tags',
  employeId: 'employeId',
  uploadePar: 'uploadePar',
  creeLe: 'creeLe',
  modifieLe: 'modifieLe'
};

exports.Prisma.CompanyModeleDocumentScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  description: 'description',
  type: 'type',
  contenu: 'contenu',
  variables: 'variables',
  estActif: 'estActif',
  entrepriseId: 'entrepriseId',
  version: 'version',
  creePar: 'creePar',
  creeLe: 'creeLe',
  modifieLe: 'modifieLe'
};

exports.Prisma.CompanyPeriodePaieScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  dateDebut: 'dateDebut',
  dateFin: 'dateFin',
  estCloturee: 'estCloturee',
  dateReglement: 'dateReglement',
  notes: 'notes',
  metadata: 'metadata',
  entrepriseId: 'entrepriseId',
  creeLe: 'creeLe',
  modifieLe: 'modifieLe'
};

exports.Prisma.CompanyConfigurationPaieScalarFieldEnum = {
  id: 'id',
  entrepriseId: 'entrepriseId',
  jourPaie: 'jourPaie',
  periodeCalcul: 'periodeCalcul',
  regleArrondi: 'regleArrondi',
  deviseSecondaire: 'deviseSecondaire',
  tauxChange: 'tauxChange',
  formatNumeration: 'formatNumeration',
  regleValidation: 'regleValidation',
  parametresCalcul: 'parametresCalcul',
  modifieLe: 'modifieLe'
};

exports.Prisma.CompanyHistoriqueSalaireScalarFieldEnum = {
  id: 'id',
  employeId: 'employeId',
  ancienSalaire: 'ancienSalaire',
  nouveauSalaire: 'nouveauSalaire',
  dateEffet: 'dateEffet',
  motif: 'motif',
  notes: 'notes',
  documents: 'documents',
  modifiePar: 'modifiePar',
  creeLe: 'creeLe'
};

exports.Prisma.CompanyRegleDeductionScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  description: 'description',
  type: 'type',
  formule: 'formule',
  conditionsApplication: 'conditionsApplication',
  estObligatoire: 'estObligatoire',
  ordre: 'ordre',
  configurationId: 'configurationId',
  estActif: 'estActif',
  creeLe: 'creeLe',
  modifieLe: 'modifieLe'
};

exports.Prisma.PointageScalarFieldEnum = {
  id: 'id',
  employeId: 'employeId',
  date: 'date',
  heureArrivee: 'heureArrivee',
  heureDepart: 'heureDepart',
  statut: 'statut',
  typePointage: 'typePointage',
  commentaire: 'commentaire',
  latitude: 'latitude',
  longitude: 'longitude',
  ipAddress: 'ipAddress',
  deviceInfo: 'deviceInfo',
  validePar: 'validePar',
  dateValidation: 'dateValidation',
  creeLe: 'creeLe',
  modifieLe: 'modifieLe'
};

exports.Prisma.ReglePointageScalarFieldEnum = {
  id: 'id',
  entrepriseId: 'entrepriseId',
  heureDebut: 'heureDebut',
  heureFin: 'heureFin',
  toleranceRetard: 'toleranceRetard',
  toleranceDepart: 'toleranceDepart',
  joursTravail: 'joursTravail',
  heuresParJour: 'heuresParJour',
  heuresSupAutorise: 'heuresSupAutorise',
  seuilHeuresSup: 'seuilHeuresSup',
  pauseDejeuner: 'pauseDejeuner',
  estFlexible: 'estFlexible',
  plageHoraireMin: 'plageHoraireMin',
  plageHoraireMax: 'plageHoraireMax',
  joursFeries: 'joursFeries',
  modifieLe: 'modifieLe'
};

exports.Prisma.AbsenceScalarFieldEnum = {
  id: 'id',
  employeId: 'employeId',
  typeAbsence: 'typeAbsence',
  dateDebut: 'dateDebut',
  dateFin: 'dateFin',
  motif: 'motif',
  statut: 'statut',
  joursOuvres: 'joursOuvres',
  heuresAbsence: 'heuresAbsence',
  commentaire: 'commentaire',
  pieceJointe: 'pieceJointe',
  approuvePar: 'approuvePar',
  dateApprobation: 'dateApprobation',
  creeLe: 'creeLe',
  modifieLe: 'modifieLe'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  email: 'email',
  passwordHash: 'passwordHash',
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  twoFactorSecret: 'twoFactorSecret'
};

exports.Prisma.EmployeeOrderByRelevanceFieldEnum = {
  employeeId: 'employeeId',
  department: 'department',
  position: 'position',
  phone: 'phone',
  address: 'address',
  qrCode: 'qrCode'
};

exports.Prisma.EntrepriseOrderByRelevanceFieldEnum = {
  nom: 'nom',
  adresse: 'adresse',
  telephone: 'telephone',
  email: 'email',
  siteWeb: 'siteWeb',
  logo: 'logo',
  couleurPrimaire: 'couleurPrimaire',
  couleurSecondaire: 'couleurSecondaire',
  couleurDashboard: 'couleurDashboard',
  description: 'description',
  devise: 'devise',
  timezone: 'timezone',
  periodePayroll: 'periodePayroll'
};

exports.Prisma.JournalAuditOrderByRelevanceFieldEnum = {
  action: 'action',
  nomTable: 'nomTable'
};

exports.Prisma.PaymentOrderByRelevanceFieldEnum = {
  reference: 'reference',
  notes: 'notes'
};

exports.Prisma.NotificationOrderByRelevanceFieldEnum = {
  title: 'title',
  message: 'message',
  category: 'category',
  link: 'link'
};

exports.Prisma.CompanyFactureOrderByRelevanceFieldEnum = {
  numeroFacture: 'numeroFacture',
  description: 'description'
};

exports.Prisma.CompanyLigneFactureOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.CompanyPayRunOrderByRelevanceFieldEnum = {
  reference: 'reference'
};

exports.Prisma.CompanyBulletinOrderByRelevanceFieldEnum = {
  numeroBulletin: 'numeroBulletin',
  statutPaiement: 'statutPaiement',
  cheminPDF: 'cheminPDF'
};

exports.Prisma.CompanyPaiementOrderByRelevanceFieldEnum = {
  referenceTransaction: 'referenceTransaction',
  methodePaiement: 'methodePaiement',
  referencePaiement: 'referencePaiement',
  notes: 'notes',
  cheminRecu: 'cheminRecu',
  statut: 'statut'
};

exports.Prisma.CompanyTemplateOrderByRelevanceFieldEnum = {
  typeTemplate: 'typeTemplate',
  nom: 'nom',
  contenu: 'contenu'
};

exports.Prisma.CompanySettingOrderByRelevanceFieldEnum = {
  cle: 'cle',
  valeur: 'valeur',
  description: 'description',
  typeData: 'typeData'
};

exports.Prisma.CompanyDocumentOrderByRelevanceFieldEnum = {
  type: 'type',
  titre: 'titre',
  description: 'description',
  cheminFichier: 'cheminFichier',
  mimeType: 'mimeType',
  tags: 'tags'
};

exports.Prisma.CompanyModeleDocumentOrderByRelevanceFieldEnum = {
  nom: 'nom',
  description: 'description',
  type: 'type',
  contenu: 'contenu'
};

exports.Prisma.CompanyPeriodePaieOrderByRelevanceFieldEnum = {
  nom: 'nom',
  notes: 'notes'
};

exports.Prisma.CompanyConfigurationPaieOrderByRelevanceFieldEnum = {
  periodeCalcul: 'periodeCalcul',
  regleArrondi: 'regleArrondi',
  deviseSecondaire: 'deviseSecondaire'
};

exports.Prisma.CompanyHistoriqueSalaireOrderByRelevanceFieldEnum = {
  motif: 'motif',
  notes: 'notes'
};

exports.Prisma.CompanyRegleDeductionOrderByRelevanceFieldEnum = {
  nom: 'nom',
  description: 'description',
  type: 'type',
  formule: 'formule'
};

exports.Prisma.PointageOrderByRelevanceFieldEnum = {
  commentaire: 'commentaire',
  ipAddress: 'ipAddress',
  deviceInfo: 'deviceInfo'
};

exports.Prisma.ReglePointageOrderByRelevanceFieldEnum = {
  heureDebut: 'heureDebut',
  heureFin: 'heureFin',
  plageHoraireMin: 'plageHoraireMin',
  plageHoraireMax: 'plageHoraireMax'
};

exports.Prisma.AbsenceOrderByRelevanceFieldEnum = {
  motif: 'motif',
  commentaire: 'commentaire',
  pieceJointe: 'pieceJointe'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  CASHIER: 'CASHIER',
  SUPERADMIN: 'SUPERADMIN'
};

exports.EmployeeStatus = exports.$Enums.EmployeeStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  TERMINATED: 'TERMINATED'
};

exports.ContractType = exports.$Enums.ContractType = {
  FIXED_SALARY: 'FIXED_SALARY',
  DAILY: 'DAILY',
  HOURLY: 'HOURLY'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  CASH: 'CASH',
  BANK_TRANSFER: 'BANK_TRANSFER',
  CHECK: 'CHECK',
  MOBILE_MONEY: 'MOBILE_MONEY'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PENDING: 'PENDING',
  PROCESSED: 'PROCESSED',
  CANCELLED: 'CANCELLED',
  FAILED: 'FAILED'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  INFO: 'INFO',
  SUCCESS: 'SUCCESS',
  WARNING: 'WARNING',
  ERROR: 'ERROR'
};

exports.CompanyStatutFacture = exports.$Enums.CompanyStatutFacture = {
  EN_ATTENTE: 'EN_ATTENTE',
  PAYEE: 'PAYEE',
  ANNULEE: 'ANNULEE'
};

exports.CompanyStatutPayRun = exports.$Enums.CompanyStatutPayRun = {
  BROUILLON: 'BROUILLON',
  EN_COURS: 'EN_COURS',
  EN_ATTENTE_APPROBATION: 'EN_ATTENTE_APPROBATION',
  APPROUVE: 'APPROUVE',
  REJETE: 'REJETE',
  COMPLETE: 'COMPLETE',
  ANNULE: 'ANNULE'
};

exports.CompanyStatutPaiement = exports.$Enums.CompanyStatutPaiement = {
  EN_ATTENTE: 'EN_ATTENTE',
  TRAITE: 'TRAITE',
  ECHOUE: 'ECHOUE',
  ANNULE: 'ANNULE'
};

exports.CompanyMethodePaiement = exports.$Enums.CompanyMethodePaiement = {
  ESPECES: 'ESPECES',
  CHEQUE: 'CHEQUE',
  VIREMENT: 'VIREMENT',
  MOBILE_MONEY: 'MOBILE_MONEY',
  AUTRE: 'AUTRE'
};

exports.StatutPointage = exports.$Enums.StatutPointage = {
  PRESENT: 'PRESENT',
  RETARD: 'RETARD',
  DEPART_ANTICIPE: 'DEPART_ANTICIPE',
  ABSENT: 'ABSENT',
  CONGE: 'CONGE',
  MALADIE: 'MALADIE',
  AUTRE: 'AUTRE'
};

exports.TypePointage = exports.$Enums.TypePointage = {
  NORMAL: 'NORMAL',
  RETARD_JUSTIFIE: 'RETARD_JUSTIFIE',
  DEPART_ANTICIPE_JUSTIFIE: 'DEPART_ANTICIPE_JUSTIFIE',
  HEURES_SUPPLEMENTAIRES: 'HEURES_SUPPLEMENTAIRES',
  TRAVAIL_NUIT: 'TRAVAIL_NUIT',
  FERIE: 'FERIE'
};

exports.TypeAbsence = exports.$Enums.TypeAbsence = {
  CONGE_ANNUEL: 'CONGE_ANNUEL',
  CONGE_MALADIE: 'CONGE_MALADIE',
  CONGE_MATERNITE: 'CONGE_MATERNITE',
  CONGE_PATERNITE: 'CONGE_PATERNITE',
  CONGE_EXCEPTIONNEL: 'CONGE_EXCEPTIONNEL',
  ABSENCE_NON_JUSTIFIEE: 'ABSENCE_NON_JUSTIFIEE',
  ACCIDENT_TRAVAIL: 'ACCIDENT_TRAVAIL',
  FORMATION: 'FORMATION',
  AUTRE: 'AUTRE'
};

exports.StatutAbsence = exports.$Enums.StatutAbsence = {
  EN_ATTENTE: 'EN_ATTENTE',
  APPROUVEE: 'APPROUVEE',
  REJETEE: 'REJETEE',
  ANNULEE: 'ANNULEE'
};

exports.Prisma.ModelName = {
  User: 'User',
  Employee: 'Employee',
  Entreprise: 'Entreprise',
  JournalAudit: 'JournalAudit',
  Payment: 'Payment',
  Notification: 'Notification',
  CompanyFacture: 'CompanyFacture',
  CompanyLigneFacture: 'CompanyLigneFacture',
  CompanyPayRun: 'CompanyPayRun',
  CompanyBulletin: 'CompanyBulletin',
  CompanyPaiement: 'CompanyPaiement',
  CompanyTemplate: 'CompanyTemplate',
  CompanySetting: 'CompanySetting',
  CompanyDocument: 'CompanyDocument',
  CompanyModeleDocument: 'CompanyModeleDocument',
  CompanyPeriodePaie: 'CompanyPeriodePaie',
  CompanyConfigurationPaie: 'CompanyConfigurationPaie',
  CompanyHistoriqueSalaire: 'CompanyHistoriqueSalaire',
  CompanyRegleDeduction: 'CompanyRegleDeduction',
  Pointage: 'Pointage',
  ReglePointage: 'ReglePointage',
  Absence: 'Absence'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/syllafall/Téléchargements/employee-management (4)/backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/syllafall/Téléchargements/employee-management (4)/backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Global Models\n\nmodel User {\n  id               Int       @id @default(autoincrement())\n  email            String    @unique\n  passwordHash     String    @map(\"password_hash\")\n  role             Role      @default(CASHIER)\n  firstName        String    @map(\"first_name\")\n  lastName         String    @map(\"last_name\")\n  phone            String?\n  twoFactorEnabled Boolean   @default(false) @map(\"two_factor_enabled\")\n  twoFactorSecret  String?   @map(\"two_factor_secret\")\n  lastLogin        DateTime? @map(\"last_login\")\n  permissions      Json?\n  createdAt        DateTime  @default(now()) @map(\"created_at\")\n  updatedAt        DateTime  @updatedAt @map(\"updated_at\")\n\n  // Relations\n  employee          Employee?\n  journalAudit      JournalAudit[]\n  processedPayments Payment[]\n  notifications     Notification[]\n\n  // Company relations\n  createdFactures          CompanyFacture[]           @relation(\"FactureCreatedBy\")\n  createdPayRuns           CompanyPayRun[]            @relation(\"PayRunCreatedBy\")\n  approvedPayRuns          CompanyPayRun[]            @relation(\"PayRunApprovedBy\")\n  processedPaymentsCompany CompanyPaiement[]          @relation(\"PaiementProcessedBy\")\n  uploadedDocuments        CompanyDocument[]          @relation(\"DocumentUploadedBy\")\n  createdModeles           CompanyModeleDocument[]    @relation(\"ModeleCreatedBy\")\n  modifiedSalaries         CompanyHistoriqueSalaire[] @relation(\"SalaryModifiedBy\")\n\n  // Attendance relations\n  validatedPointages Pointage[] @relation(\"PointageValidateur\")\n  approvedAbsences   Absence[]  @relation(\"AbsenceApprobateur\")\n\n  @@map(\"users\")\n}\n\nmodel Employee {\n  id           Int            @id @default(autoincrement())\n  userId       Int            @unique @map(\"user_id\")\n  entrepriseId Int            @map(\"entreprise_id\")\n  employeeId   String         @unique @map(\"employee_id\")\n  department   String?\n  position     String?\n  contractType ContractType   @default(FIXED_SALARY) @map(\"contract_type\")\n  salary       Decimal?       @db.Decimal(10, 2) // Salaire fixe ou taux journalier\n  dailyRate    Decimal?       @map(\"daily_rate\") @db.Decimal(10, 2) // Taux journalier\n  hourlyRate   Decimal?       @map(\"hourly_rate\") @db.Decimal(10, 2) // Taux horaire pour honoraires\n  hireDate     DateTime?      @map(\"hire_date\")\n  phone        String?\n  address      String?        @db.Text\n  status       EmployeeStatus @default(ACTIVE)\n  qrCode       String?        @map(\"qr_code\") @db.VarChar(5000) // Code QR unique pour pointage\n  createdAt    DateTime       @default(now()) @map(\"created_at\")\n  updatedAt    DateTime       @updatedAt @map(\"updated_at\")\n\n  // Relations\n  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n  entreprise Entreprise @relation(fields: [entrepriseId], references: [id])\n  payments   Payment[]\n\n  // Company relations\n  factures      CompanyFacture[]\n  bulletins     CompanyBulletin[]\n  documents     CompanyDocument[]\n  salaryHistory CompanyHistoriqueSalaire[]\n\n  // Attendance relations\n  pointages Pointage[]\n  absences  Absence[]\n\n  @@index([entrepriseId])\n  @@index([status])\n  @@map(\"employees\")\n}\n\nmodel Entreprise {\n  id                Int      @id @default(autoincrement())\n  nom               String\n  adresse           String?  @db.Text\n  telephone         String?\n  email             String?\n  siteWeb           String?  @map(\"site_web\")\n  logo              String?\n  couleurPrimaire   String?  @map(\"couleur_primaire\") // Couleur principale du thème\n  couleurSecondaire String?  @map(\"couleur_secondaire\") // Couleur secondaire\n  couleurDashboard  String?  @map(\"couleur_dashboard\") // Couleur du dashboard\n  description       String?  @db.Text\n  devise            String   @default(\"XOF\") @map(\"devise\")\n  timezone          String   @default(\"Africa/Dakar\")\n  periodePayroll    String   @default(\"MENSUEL\") @map(\"periode_payroll\")\n  estActive         Boolean  @default(true) @map(\"est_active\")\n  parametres        Json?    @map(\"parametres\")\n  creeLe            DateTime @default(now()) @map(\"cree_le\")\n  modifieLe         DateTime @updatedAt @map(\"modifie_le\")\n\n  // Relations\n  employees Employee[]\n\n  // Company relations\n  payRuns            CompanyPayRun[]\n  templates          CompanyTemplate[]\n  settings           CompanySetting[]\n  modeles            CompanyModeleDocument[]\n  periodesPaie       CompanyPeriodePaie[]\n  configurationsPaie CompanyConfigurationPaie[]\n\n  // Attendance relations\n  reglePointage ReglePointage?\n\n  @@map(\"entreprises\")\n}\n\nmodel JournalAudit {\n  id                Int      @id @default(autoincrement())\n  utilisateurId     Int?     @map(\"utilisateur_id\")\n  action            String\n  nomTable          String   @map(\"nom_table\")\n  idEnregistrement  Int?     @map(\"id_enregistrement\")\n  anciennes_valeurs Json?    @map(\"anciennes_valeurs\")\n  nouvelles_valeurs Json?    @map(\"nouvelles_valeurs\")\n  creeLe            DateTime @default(now()) @map(\"cree_le\")\n\n  // Relations\n  utilisateur User? @relation(fields: [utilisateurId], references: [id])\n\n  @@map(\"journal_audit\")\n}\n\nmodel Payment {\n  id            Int           @id @default(autoincrement())\n  employeeId    Int           @map(\"employee_id\")\n  amount        Decimal       @db.Decimal(10, 2)\n  paymentDate   DateTime      @default(now()) @map(\"payment_date\")\n  paymentMethod PaymentMethod @default(CASH) @map(\"payment_method\")\n  reference     String?       @unique\n  status        PaymentStatus @default(PENDING)\n  notes         String?       @db.Text\n  processedBy   Int?          @map(\"processed_by\") // User ID du caissier\n  createdAt     DateTime      @default(now()) @map(\"created_at\")\n  updatedAt     DateTime      @updatedAt @map(\"updated_at\")\n\n  // Relations\n  employee Employee @relation(fields: [employeeId], references: [id])\n  cashier  User?    @relation(fields: [processedBy], references: [id])\n\n  @@index([employeeId])\n  @@index([paymentDate])\n  @@index([status])\n  @@map(\"payments\")\n}\n\nmodel Notification {\n  id        Int              @id @default(autoincrement())\n  userId    Int              @map(\"user_id\")\n  title     String\n  message   String           @db.Text\n  type      NotificationType @default(INFO)\n  category  String\n  isRead    Boolean          @default(false) @map(\"is_read\")\n  link      String?\n  metadata  Json?\n  createdAt DateTime         @default(now()) @map(\"created_at\")\n  updatedAt DateTime         @updatedAt @map(\"updated_at\")\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, isRead])\n  @@index([createdAt])\n  @@map(\"notifications\")\n}\n\n// Company Models\n\nmodel CompanyFacture {\n  id            Int                  @id @default(autoincrement())\n  employeeId    Int                  @map(\"employee_id\")\n  numeroFacture String               @unique @map(\"numero_facture\")\n  montant       Decimal              @db.Decimal(10, 2)\n  description   String?              @db.Text\n  statut        CompanyStatutFacture @default(EN_ATTENTE)\n  dateEcheance  DateTime?            @map(\"date_echeance\")\n  datePaiement  DateTime?            @map(\"date_paiement\")\n  creePar       Int                  @map(\"cree_par\")\n  creeLe        DateTime             @default(now()) @map(\"cree_le\")\n  modifieLe     DateTime             @updatedAt @map(\"modifie_le\")\n\n  // Relations\n  employee      Employee              @relation(fields: [employeeId], references: [id])\n  creator       User                  @relation(\"FactureCreatedBy\", fields: [creePar], references: [id])\n  lignesFacture CompanyLigneFacture[]\n\n  @@map(\"factures\")\n}\n\nmodel CompanyLigneFacture {\n  id           Int      @id @default(autoincrement())\n  factureId    Int      @map(\"facture_id\")\n  description  String\n  quantite     Int      @default(1)\n  prixUnitaire Decimal  @map(\"prix_unitaire\") @db.Decimal(10, 2)\n  prixTotal    Decimal  @map(\"prix_total\") @db.Decimal(10, 2)\n  creeLe       DateTime @default(now()) @map(\"cree_le\")\n\n  // Relations\n  facture CompanyFacture @relation(fields: [factureId], references: [id], onDelete: Cascade)\n\n  @@map(\"lignes_facture\")\n}\n\nmodel CompanyPayRun {\n  id              Int                 @id @default(autoincrement())\n  reference       String              @unique\n  dateDebut       DateTime            @map(\"date_debut\")\n  dateFin         DateTime            @map(\"date_fin\")\n  datePaiement    DateTime            @map(\"date_paiement\")\n  statut          CompanyStatutPayRun @default(BROUILLON)\n  totalBrut       Decimal             @map(\"total_brut\") @db.Decimal(10, 2)\n  totalNet        Decimal             @map(\"total_net\") @db.Decimal(10, 2)\n  totalDeductions Decimal             @map(\"total_deductions\") @db.Decimal(10, 2)\n  nombreEmployes  Int                 @map(\"nombre_employes\")\n  metadata        Json?\n  entrepriseId    Int                 @map(\"entreprise_id\")\n  periodePaieId   Int                 @map(\"periode_paie_id\")\n  creePar         Int                 @map(\"cree_par\")\n  creeLe          DateTime            @default(now()) @map(\"cree_le\")\n  approuveLe      DateTime?           @map(\"approuve_le\")\n  approuvePar     Int?                @map(\"approuve_par\")\n\n  // Relations\n  entreprise  Entreprise         @relation(fields: [entrepriseId], references: [id])\n  periodePaie CompanyPeriodePaie @relation(fields: [periodePaieId], references: [id])\n  creator     User               @relation(\"PayRunCreatedBy\", fields: [creePar], references: [id])\n  approver    User?              @relation(\"PayRunApprovedBy\", fields: [approuvePar], references: [id])\n  bulletins   CompanyBulletin[]\n\n  @@index([entrepriseId, statut])\n  @@index([creePar])\n  @@map(\"pay_runs\")\n}\n\nmodel CompanyBulletin {\n  id                Int      @id @default(autoincrement())\n  numeroBulletin    String   @unique @map(\"numero_bulletin\")\n  datePaiement      DateTime @map(\"date_paiement\")\n  joursTravailles   Int      @map(\"jours_travailles\")\n  heuresTravailes   Int      @map(\"heures_travaillees\")\n  salaireBrut       Decimal  @map(\"salaire_brut\") @db.Decimal(10, 2)\n  salaireBase       Decimal  @map(\"salaire_base\") @db.Decimal(10, 2)\n  montantHeuresSupp Decimal  @map(\"montant_heures_supp\") @db.Decimal(10, 2)\n  montantBonus      Decimal  @map(\"montant_bonus\") @db.Decimal(10, 2)\n  indemnites        Decimal  @db.Decimal(10, 2)\n  deductions        Json\n  totalDeductions   Decimal  @map(\"total_deductions\") @db.Decimal(10, 2)\n  salaireNet        Decimal  @map(\"salaire_net\") @db.Decimal(10, 2)\n  montantPaye       Decimal  @map(\"montant_paye\") @db.Decimal(10, 2)\n  resteAPayer       Decimal  @map(\"reste_a_payer\") @db.Decimal(10, 2)\n  statutPaiement    String   @map(\"statut_paiement\")\n  cheminPDF         String?  @map(\"chemin_pdf\")\n  calculs           Json?\n  estVerrouille     Boolean  @default(false) @map(\"est_verrouille\")\n  payRunId          Int      @map(\"pay_run_id\")\n  employeId         Int      @map(\"employe_id\")\n  creeLe            DateTime @default(now()) @map(\"cree_le\")\n  modifieLe         DateTime @updatedAt @map(\"modifie_le\")\n\n  // Relations\n  payRun    CompanyPayRun     @relation(fields: [payRunId], references: [id])\n  employee  Employee          @relation(fields: [employeId], references: [id])\n  paiements CompanyPaiement[]\n\n  @@index([payRunId])\n  @@index([employeId])\n  @@index([statutPaiement])\n  @@map(\"bulletins\")\n}\n\nmodel CompanyPaiement {\n  id                   Int      @id @default(autoincrement())\n  referenceTransaction String   @unique @map(\"reference_transaction\")\n  montant              Decimal  @db.Decimal(10, 2)\n  methodePaiement      String   @map(\"methode_paiement\")\n  referencePaiement    String?  @map(\"reference_paiement\")\n  datePaiement         DateTime @map(\"date_paiement\")\n  notes                String?  @db.Text\n  cheminRecu           String?  @map(\"chemin_recu\")\n  statut               String\n  metadata             Json?\n  bulletinId           Int      @map(\"bulletin_id\")\n  traitePar            Int      @map(\"traite_par\")\n  creeLe               DateTime @default(now()) @map(\"cree_le\")\n\n  // Relations\n  bulletin  CompanyBulletin @relation(fields: [bulletinId], references: [id])\n  processor User            @relation(\"PaiementProcessedBy\", fields: [traitePar], references: [id])\n\n  @@map(\"paiements\")\n}\n\nmodel CompanyTemplate {\n  id           Int      @id @default(autoincrement())\n  typeTemplate String   @map(\"type_template\")\n  nom          String\n  contenu      String   @db.Text\n  variables    Json\n  estDefaut    Boolean  @default(false) @map(\"est_defaut\")\n  estActif     Boolean  @default(true) @map(\"est_actif\")\n  entrepriseId Int      @map(\"entreprise_id\")\n  creeLe       DateTime @default(now()) @map(\"cree_le\")\n  modifieLe    DateTime @updatedAt @map(\"modifie_le\")\n\n  // Relations\n  entreprise Entreprise @relation(fields: [entrepriseId], references: [id])\n\n  @@map(\"templates\")\n}\n\nmodel CompanySetting {\n  id           Int      @id @default(autoincrement())\n  cle          String\n  valeur       String   @db.Text\n  description  String?  @db.Text\n  typeData     String   @map(\"type_data\")\n  estEncrypte  Boolean  @default(false) @map(\"est_encrypte\")\n  entrepriseId Int      @map(\"entreprise_id\")\n  modifieLe    DateTime @updatedAt @map(\"modifie_le\")\n\n  // Relations\n  entreprise Entreprise @relation(fields: [entrepriseId], references: [id])\n\n  @@unique([cle, entrepriseId])\n  @@map(\"settings\")\n}\n\nmodel CompanyDocument {\n  id            Int      @id @default(autoincrement())\n  type          String\n  titre         String\n  description   String?  @db.Text\n  cheminFichier String   @map(\"chemin_fichier\")\n  tailleFichier Int      @map(\"taille_fichier\")\n  mimeType      String   @map(\"mime_type\")\n  metadata      Json?\n  tags          String   @db.Text // Stocké sous forme JSON\n  employeId     Int      @map(\"employe_id\")\n  uploadePar    Int      @map(\"uploade_par\")\n  creeLe        DateTime @default(now()) @map(\"cree_le\")\n  modifieLe     DateTime @updatedAt @map(\"modifie_le\")\n\n  // Relations\n  employee Employee @relation(fields: [employeId], references: [id])\n  uploader User     @relation(\"DocumentUploadedBy\", fields: [uploadePar], references: [id])\n\n  @@index([employeId, type])\n  @@map(\"documents\")\n}\n\nmodel CompanyModeleDocument {\n  id           Int      @id @default(autoincrement())\n  nom          String\n  description  String?  @db.Text\n  type         String\n  contenu      String   @db.Text\n  variables    Json\n  estActif     Boolean  @default(true) @map(\"est_actif\")\n  entrepriseId Int      @map(\"entreprise_id\")\n  version      Int      @default(1)\n  creePar      Int      @map(\"cree_par\")\n  creeLe       DateTime @default(now()) @map(\"cree_le\")\n  modifieLe    DateTime @updatedAt @map(\"modifie_le\")\n\n  // Relations\n  entreprise Entreprise @relation(fields: [entrepriseId], references: [id])\n  creator    User       @relation(\"ModeleCreatedBy\", fields: [creePar], references: [id])\n\n  @@unique([entrepriseId, nom, version])\n  @@index([entrepriseId, type, estActif])\n  @@map(\"modeles_document\")\n}\n\nmodel CompanyPeriodePaie {\n  id            Int       @id @default(autoincrement())\n  nom           String\n  dateDebut     DateTime  @map(\"date_debut\")\n  dateFin       DateTime  @map(\"date_fin\")\n  estCloturee   Boolean   @default(false) @map(\"est_cloturee\")\n  dateReglement DateTime? @map(\"date_reglement\")\n  notes         String?   @db.Text\n  metadata      Json?\n  entrepriseId  Int       @map(\"entreprise_id\")\n  creeLe        DateTime  @default(now()) @map(\"cree_le\")\n  modifieLe     DateTime  @updatedAt @map(\"modifie_le\")\n\n  // Relations\n  entreprise Entreprise      @relation(fields: [entrepriseId], references: [id])\n  payRuns    CompanyPayRun[]\n\n  @@index([entrepriseId, estCloturee])\n  @@map(\"periodes_paie\")\n}\n\nmodel CompanyConfigurationPaie {\n  id               Int      @id @default(autoincrement())\n  entrepriseId     Int      @unique @map(\"entreprise_id\")\n  jourPaie         Int      @map(\"jour_paie\")\n  periodeCalcul    String   @map(\"periode_calcul\")\n  regleArrondi     String   @map(\"regle_arrondi\")\n  deviseSecondaire String?  @map(\"devise_secondaire\")\n  tauxChange       Decimal? @map(\"taux_change\") @db.Decimal(10, 4)\n  formatNumeration Json     @map(\"format_numeration\")\n  regleValidation  Json     @map(\"regle_validation\")\n  parametresCalcul Json     @map(\"parametres_calcul\")\n  modifieLe        DateTime @updatedAt @map(\"modifie_le\")\n\n  // Relations\n  entreprise      Entreprise              @relation(fields: [entrepriseId], references: [id])\n  reglesDeduction CompanyRegleDeduction[]\n\n  @@map(\"configurations_paie\")\n}\n\nmodel CompanyHistoriqueSalaire {\n  id             Int      @id @default(autoincrement())\n  employeId      Int      @map(\"employe_id\")\n  ancienSalaire  Decimal  @map(\"ancien_salaire\") @db.Decimal(10, 2)\n  nouveauSalaire Decimal  @map(\"nouveau_salaire\") @db.Decimal(10, 2)\n  dateEffet      DateTime @map(\"date_effet\")\n  motif          String\n  notes          String?  @db.Text\n  documents      Json?\n  modifiePar     Int      @map(\"modifie_par\")\n  creeLe         DateTime @default(now()) @map(\"cree_le\")\n\n  // Relations\n  employee Employee @relation(fields: [employeId], references: [id])\n  modifier User     @relation(\"SalaryModifiedBy\", fields: [modifiePar], references: [id])\n\n  @@index([employeId, dateEffet])\n  @@map(\"historique_salaires\")\n}\n\nmodel CompanyRegleDeduction {\n  id                    Int      @id @default(autoincrement())\n  nom                   String\n  description           String?  @db.Text\n  type                  String\n  formule               String   @db.Text\n  conditionsApplication Json\n  estObligatoire        Boolean  @default(false) @map(\"est_obligatoire\")\n  ordre                 Int\n  configurationId       Int      @map(\"configuration_id\")\n  estActif              Boolean  @default(true) @map(\"est_actif\")\n  creeLe                DateTime @default(now()) @map(\"cree_le\")\n  modifieLe             DateTime @updatedAt @map(\"modifie_le\")\n\n  // Relations\n  configuration CompanyConfigurationPaie @relation(fields: [configurationId], references: [id])\n\n  @@index([configurationId, estActif])\n  @@map(\"regles_deduction\")\n}\n\n// Enums\n\nenum Role {\n  ADMIN\n  CASHIER\n  SUPERADMIN\n}\n\nenum EmployeeStatus {\n  ACTIVE\n  INACTIVE\n  TERMINATED\n}\n\nenum ContractType {\n  FIXED_SALARY\n  DAILY\n  HOURLY\n}\n\nenum PaymentMethod {\n  CASH\n  BANK_TRANSFER\n  CHECK\n  MOBILE_MONEY\n}\n\nenum PaymentStatus {\n  PENDING\n  PROCESSED\n  CANCELLED\n  FAILED\n}\n\nenum NotificationType {\n  INFO\n  SUCCESS\n  WARNING\n  ERROR\n}\n\nenum CompanyStatutFacture {\n  EN_ATTENTE\n  PAYEE\n  ANNULEE\n}\n\nenum CompanyStatutPayRun {\n  BROUILLON\n  EN_COURS\n  EN_ATTENTE_APPROBATION\n  APPROUVE\n  REJETE\n  COMPLETE\n  ANNULE\n}\n\nenum CompanyStatutPaiement {\n  EN_ATTENTE\n  TRAITE\n  ECHOUE\n  ANNULE\n}\n\nenum CompanyMethodePaiement {\n  ESPECES\n  CHEQUE\n  VIREMENT\n  MOBILE_MONEY\n  AUTRE\n}\n\n// Attendance Models\n\nmodel Pointage {\n  id             Int            @id @default(autoincrement())\n  employeId      Int            @map(\"employe_id\")\n  date           DateTime       @db.Date\n  heureArrivee   DateTime?      @map(\"heure_arrivee\")\n  heureDepart    DateTime?      @map(\"heure_depart\")\n  statut         StatutPointage @default(PRESENT)\n  typePointage   TypePointage   @default(NORMAL) @map(\"type_pointage\")\n  commentaire    String?        @db.Text\n  latitude       Decimal?       @db.Decimal(10, 8)\n  longitude      Decimal?       @db.Decimal(11, 8)\n  ipAddress      String?        @map(\"ip_address\")\n  deviceInfo     String?        @map(\"device_info\")\n  validePar      Int?           @map(\"valide_par\")\n  dateValidation DateTime?      @map(\"date_validation\")\n  creeLe         DateTime       @default(now()) @map(\"cree_le\")\n  modifieLe      DateTime       @updatedAt @map(\"modifie_le\")\n\n  // Relations\n  employe    Employee @relation(fields: [employeId], references: [id])\n  validateur User?    @relation(\"PointageValidateur\", fields: [validePar], references: [id])\n\n  @@index([employeId, date])\n  @@index([date, statut])\n  @@map(\"pointages\")\n}\n\nmodel ReglePointage {\n  id                Int      @id @default(autoincrement())\n  entrepriseId      Int      @unique @map(\"entreprise_id\")\n  heureDebut        String   @default(\"08:00\") @map(\"heure_debut\") // Format HH:MM\n  heureFin          String   @default(\"17:00\") @map(\"heure_fin\")\n  toleranceRetard   Int      @default(15) @map(\"tolerance_retard\") // Minutes\n  toleranceDepart   Int      @default(15) @map(\"tolerance_depart\") // Minutes\n  joursTravail      Json     @map(\"jours_travail\") // [\"LUNDI\", \"MARDI\", ...]\n  heuresParJour     Int      @default(8) @map(\"heures_par_jour\")\n  heuresSupAutorise Boolean  @default(true) @map(\"heures_sup_autorise\")\n  seuilHeuresSup    Int      @default(48) @map(\"seuil_heures_sup\") // Semaine\n  pauseDejeuner     Int      @default(60) @map(\"pause_dejeuner\") // Minutes\n  estFlexible       Boolean  @default(false) @map(\"est_flexible\")\n  plageHoraireMin   String?  @map(\"plage_horaire_min\")\n  plageHoraireMax   String?  @map(\"plage_horaire_max\")\n  joursFeries       Json?    @map(\"jours_feries\")\n  modifieLe         DateTime @updatedAt @map(\"modifie_le\")\n\n  // Relations\n  entreprise Entreprise @relation(fields: [entrepriseId], references: [id])\n\n  @@map(\"regles_pointage\")\n}\n\nmodel Absence {\n  id              Int           @id @default(autoincrement())\n  employeId       Int           @map(\"employe_id\")\n  typeAbsence     TypeAbsence   @map(\"type_absence\")\n  dateDebut       DateTime      @map(\"date_debut\")\n  dateFin         DateTime      @map(\"date_fin\")\n  motif           String?       @db.Text\n  statut          StatutAbsence @default(EN_ATTENTE)\n  joursOuvres     Int           @map(\"jours_ouvres\") // Nombre de jours ouvrés\n  heuresAbsence   Decimal       @map(\"heures_absence\") @db.Decimal(5, 2)\n  commentaire     String?       @db.Text\n  pieceJointe     String?       @map(\"piece_jointe\")\n  approuvePar     Int?          @map(\"approuve_par\")\n  dateApprobation DateTime?     @map(\"date_approbation\")\n  creeLe          DateTime      @default(now()) @map(\"cree_le\")\n  modifieLe       DateTime      @updatedAt @map(\"modifie_le\")\n\n  // Relations\n  employe     Employee @relation(fields: [employeId], references: [id])\n  approbateur User?    @relation(\"AbsenceApprobateur\", fields: [approuvePar], references: [id])\n\n  @@index([employeId, statut])\n  @@index([dateDebut, dateFin])\n  @@map(\"absences\")\n}\n\n// Enums pour les pointages\n\nenum StatutPointage {\n  PRESENT\n  RETARD\n  DEPART_ANTICIPE\n  ABSENT\n  CONGE\n  MALADIE\n  AUTRE\n}\n\nenum TypePointage {\n  NORMAL\n  RETARD_JUSTIFIE\n  DEPART_ANTICIPE_JUSTIFIE\n  HEURES_SUPPLEMENTAIRES\n  TRAVAIL_NUIT\n  FERIE\n}\n\nenum TypeAbsence {\n  CONGE_ANNUEL\n  CONGE_MALADIE\n  CONGE_MATERNITE\n  CONGE_PATERNITE\n  CONGE_EXCEPTIONNEL\n  ABSENCE_NON_JUSTIFIEE\n  ACCIDENT_TRAVAIL\n  FORMATION\n  AUTRE\n}\n\nenum StatutAbsence {\n  EN_ATTENTE\n  APPROUVEE\n  REJETEE\n  ANNULEE\n}\n",
  "inlineSchemaHash": "fb7e9a6e5614feaf750553d84d8d53f5c959b9790bcb9e11ec9ec9f3e21783f0",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"twoFactorEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"two_factor_enabled\"},{\"name\":\"twoFactorSecret\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"two_factor_secret\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_login\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToUser\"},{\"name\":\"journalAudit\",\"kind\":\"object\",\"type\":\"JournalAudit\",\"relationName\":\"JournalAuditToUser\"},{\"name\":\"processedPayments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToUser\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"createdFactures\",\"kind\":\"object\",\"type\":\"CompanyFacture\",\"relationName\":\"FactureCreatedBy\"},{\"name\":\"createdPayRuns\",\"kind\":\"object\",\"type\":\"CompanyPayRun\",\"relationName\":\"PayRunCreatedBy\"},{\"name\":\"approvedPayRuns\",\"kind\":\"object\",\"type\":\"CompanyPayRun\",\"relationName\":\"PayRunApprovedBy\"},{\"name\":\"processedPaymentsCompany\",\"kind\":\"object\",\"type\":\"CompanyPaiement\",\"relationName\":\"PaiementProcessedBy\"},{\"name\":\"uploadedDocuments\",\"kind\":\"object\",\"type\":\"CompanyDocument\",\"relationName\":\"DocumentUploadedBy\"},{\"name\":\"createdModeles\",\"kind\":\"object\",\"type\":\"CompanyModeleDocument\",\"relationName\":\"ModeleCreatedBy\"},{\"name\":\"modifiedSalaries\",\"kind\":\"object\",\"type\":\"CompanyHistoriqueSalaire\",\"relationName\":\"SalaryModifiedBy\"},{\"name\":\"validatedPointages\",\"kind\":\"object\",\"type\":\"Pointage\",\"relationName\":\"PointageValidateur\"},{\"name\":\"approvedAbsences\",\"kind\":\"object\",\"type\":\"Absence\",\"relationName\":\"AbsenceApprobateur\"}],\"dbName\":\"users\"},\"Employee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"user_id\"},{\"name\":\"entrepriseId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"entreprise_id\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"employee_id\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contractType\",\"kind\":\"enum\",\"type\":\"ContractType\",\"dbName\":\"contract_type\"},{\"name\":\"salary\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"dailyRate\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"daily_rate\"},{\"name\":\"hourlyRate\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"hourly_rate\"},{\"name\":\"hireDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"hire_date\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"EmployeeStatus\"},{\"name\":\"qrCode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"qr_code\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EmployeeToUser\"},{\"name\":\"entreprise\",\"kind\":\"object\",\"type\":\"Entreprise\",\"relationName\":\"EmployeeToEntreprise\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"EmployeeToPayment\"},{\"name\":\"factures\",\"kind\":\"object\",\"type\":\"CompanyFacture\",\"relationName\":\"CompanyFactureToEmployee\"},{\"name\":\"bulletins\",\"kind\":\"object\",\"type\":\"CompanyBulletin\",\"relationName\":\"CompanyBulletinToEmployee\"},{\"name\":\"documents\",\"kind\":\"object\",\"type\":\"CompanyDocument\",\"relationName\":\"CompanyDocumentToEmployee\"},{\"name\":\"salaryHistory\",\"kind\":\"object\",\"type\":\"CompanyHistoriqueSalaire\",\"relationName\":\"CompanyHistoriqueSalaireToEmployee\"},{\"name\":\"pointages\",\"kind\":\"object\",\"type\":\"Pointage\",\"relationName\":\"EmployeeToPointage\"},{\"name\":\"absences\",\"kind\":\"object\",\"type\":\"Absence\",\"relationName\":\"AbsenceToEmployee\"}],\"dbName\":\"employees\"},\"Entreprise\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adresse\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telephone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"siteWeb\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"site_web\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"couleurPrimaire\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"couleur_primaire\"},{\"name\":\"couleurSecondaire\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"couleur_secondaire\"},{\"name\":\"couleurDashboard\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"couleur_dashboard\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"devise\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"devise\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"periodePayroll\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"periode_payroll\"},{\"name\":\"estActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"est_active\"},{\"name\":\"parametres\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"parametres\"},{\"name\":\"creeLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cree_le\"},{\"name\":\"modifieLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"modifie_le\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToEntreprise\"},{\"name\":\"payRuns\",\"kind\":\"object\",\"type\":\"CompanyPayRun\",\"relationName\":\"CompanyPayRunToEntreprise\"},{\"name\":\"templates\",\"kind\":\"object\",\"type\":\"CompanyTemplate\",\"relationName\":\"CompanyTemplateToEntreprise\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"CompanySetting\",\"relationName\":\"CompanySettingToEntreprise\"},{\"name\":\"modeles\",\"kind\":\"object\",\"type\":\"CompanyModeleDocument\",\"relationName\":\"CompanyModeleDocumentToEntreprise\"},{\"name\":\"periodesPaie\",\"kind\":\"object\",\"type\":\"CompanyPeriodePaie\",\"relationName\":\"CompanyPeriodePaieToEntreprise\"},{\"name\":\"configurationsPaie\",\"kind\":\"object\",\"type\":\"CompanyConfigurationPaie\",\"relationName\":\"CompanyConfigurationPaieToEntreprise\"},{\"name\":\"reglePointage\",\"kind\":\"object\",\"type\":\"ReglePointage\",\"relationName\":\"EntrepriseToReglePointage\"}],\"dbName\":\"entreprises\"},\"JournalAudit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"utilisateurId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"utilisateur_id\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nomTable\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"nom_table\"},{\"name\":\"idEnregistrement\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"id_enregistrement\"},{\"name\":\"anciennes_valeurs\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"anciennes_valeurs\"},{\"name\":\"nouvelles_valeurs\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"nouvelles_valeurs\"},{\"name\":\"creeLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cree_le\"},{\"name\":\"utilisateur\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"JournalAuditToUser\"}],\"dbName\":\"journal_audit\"},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"employee_id\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"paymentDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"payment_date\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\",\"dbName\":\"payment_method\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processedBy\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"processed_by\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToPayment\"},{\"name\":\"cashier\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PaymentToUser\"}],\"dbName\":\"payments\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"user_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_read\"},{\"name\":\"link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"}],\"dbName\":\"notifications\"},\"CompanyFacture\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"employee_id\"},{\"name\":\"numeroFacture\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"numero_facture\"},{\"name\":\"montant\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statut\",\"kind\":\"enum\",\"type\":\"CompanyStatutFacture\"},{\"name\":\"dateEcheance\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_echeance\"},{\"name\":\"datePaiement\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_paiement\"},{\"name\":\"creePar\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"cree_par\"},{\"name\":\"creeLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cree_le\"},{\"name\":\"modifieLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"modifie_le\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"CompanyFactureToEmployee\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FactureCreatedBy\"},{\"name\":\"lignesFacture\",\"kind\":\"object\",\"type\":\"CompanyLigneFacture\",\"relationName\":\"CompanyFactureToCompanyLigneFacture\"}],\"dbName\":\"factures\"},\"CompanyLigneFacture\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"factureId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"facture_id\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantite\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"prixUnitaire\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"prix_unitaire\"},{\"name\":\"prixTotal\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"prix_total\"},{\"name\":\"creeLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cree_le\"},{\"name\":\"facture\",\"kind\":\"object\",\"type\":\"CompanyFacture\",\"relationName\":\"CompanyFactureToCompanyLigneFacture\"}],\"dbName\":\"lignes_facture\"},\"CompanyPayRun\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateDebut\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_debut\"},{\"name\":\"dateFin\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_fin\"},{\"name\":\"datePaiement\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_paiement\"},{\"name\":\"statut\",\"kind\":\"enum\",\"type\":\"CompanyStatutPayRun\"},{\"name\":\"totalBrut\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"total_brut\"},{\"name\":\"totalNet\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"total_net\"},{\"name\":\"totalDeductions\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"total_deductions\"},{\"name\":\"nombreEmployes\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"nombre_employes\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"entrepriseId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"entreprise_id\"},{\"name\":\"periodePaieId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"periode_paie_id\"},{\"name\":\"creePar\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"cree_par\"},{\"name\":\"creeLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cree_le\"},{\"name\":\"approuveLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"approuve_le\"},{\"name\":\"approuvePar\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"approuve_par\"},{\"name\":\"entreprise\",\"kind\":\"object\",\"type\":\"Entreprise\",\"relationName\":\"CompanyPayRunToEntreprise\"},{\"name\":\"periodePaie\",\"kind\":\"object\",\"type\":\"CompanyPeriodePaie\",\"relationName\":\"CompanyPayRunToCompanyPeriodePaie\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PayRunCreatedBy\"},{\"name\":\"approver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PayRunApprovedBy\"},{\"name\":\"bulletins\",\"kind\":\"object\",\"type\":\"CompanyBulletin\",\"relationName\":\"CompanyBulletinToCompanyPayRun\"}],\"dbName\":\"pay_runs\"},\"CompanyBulletin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"numeroBulletin\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"numero_bulletin\"},{\"name\":\"datePaiement\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_paiement\"},{\"name\":\"joursTravailles\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"jours_travailles\"},{\"name\":\"heuresTravailes\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"heures_travaillees\"},{\"name\":\"salaireBrut\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"salaire_brut\"},{\"name\":\"salaireBase\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"salaire_base\"},{\"name\":\"montantHeuresSupp\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"montant_heures_supp\"},{\"name\":\"montantBonus\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"montant_bonus\"},{\"name\":\"indemnites\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"deductions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"totalDeductions\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"total_deductions\"},{\"name\":\"salaireNet\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"salaire_net\"},{\"name\":\"montantPaye\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"montant_paye\"},{\"name\":\"resteAPayer\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"reste_a_payer\"},{\"name\":\"statutPaiement\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"statut_paiement\"},{\"name\":\"cheminPDF\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"chemin_pdf\"},{\"name\":\"calculs\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"estVerrouille\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"est_verrouille\"},{\"name\":\"payRunId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"pay_run_id\"},{\"name\":\"employeId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"employe_id\"},{\"name\":\"creeLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cree_le\"},{\"name\":\"modifieLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"modifie_le\"},{\"name\":\"payRun\",\"kind\":\"object\",\"type\":\"CompanyPayRun\",\"relationName\":\"CompanyBulletinToCompanyPayRun\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"CompanyBulletinToEmployee\"},{\"name\":\"paiements\",\"kind\":\"object\",\"type\":\"CompanyPaiement\",\"relationName\":\"CompanyBulletinToCompanyPaiement\"}],\"dbName\":\"bulletins\"},\"CompanyPaiement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"referenceTransaction\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"reference_transaction\"},{\"name\":\"montant\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"methodePaiement\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"methode_paiement\"},{\"name\":\"referencePaiement\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"reference_paiement\"},{\"name\":\"datePaiement\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_paiement\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cheminRecu\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"chemin_recu\"},{\"name\":\"statut\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"bulletinId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"bulletin_id\"},{\"name\":\"traitePar\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"traite_par\"},{\"name\":\"creeLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cree_le\"},{\"name\":\"bulletin\",\"kind\":\"object\",\"type\":\"CompanyBulletin\",\"relationName\":\"CompanyBulletinToCompanyPaiement\"},{\"name\":\"processor\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PaiementProcessedBy\"}],\"dbName\":\"paiements\"},\"CompanyTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"typeTemplate\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"type_template\"},{\"name\":\"nom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contenu\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variables\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"estDefaut\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"est_defaut\"},{\"name\":\"estActif\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"est_actif\"},{\"name\":\"entrepriseId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"entreprise_id\"},{\"name\":\"creeLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cree_le\"},{\"name\":\"modifieLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"modifie_le\"},{\"name\":\"entreprise\",\"kind\":\"object\",\"type\":\"Entreprise\",\"relationName\":\"CompanyTemplateToEntreprise\"}],\"dbName\":\"templates\"},\"CompanySetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"valeur\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"typeData\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"type_data\"},{\"name\":\"estEncrypte\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"est_encrypte\"},{\"name\":\"entrepriseId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"entreprise_id\"},{\"name\":\"modifieLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"modifie_le\"},{\"name\":\"entreprise\",\"kind\":\"object\",\"type\":\"Entreprise\",\"relationName\":\"CompanySettingToEntreprise\"}],\"dbName\":\"settings\"},\"CompanyDocument\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"titre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cheminFichier\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"chemin_fichier\"},{\"name\":\"tailleFichier\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"taille_fichier\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"mime_type\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"employe_id\"},{\"name\":\"uploadePar\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"uploade_par\"},{\"name\":\"creeLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cree_le\"},{\"name\":\"modifieLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"modifie_le\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"CompanyDocumentToEmployee\"},{\"name\":\"uploader\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DocumentUploadedBy\"}],\"dbName\":\"documents\"},\"CompanyModeleDocument\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contenu\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variables\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"estActif\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"est_actif\"},{\"name\":\"entrepriseId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"entreprise_id\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creePar\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"cree_par\"},{\"name\":\"creeLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cree_le\"},{\"name\":\"modifieLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"modifie_le\"},{\"name\":\"entreprise\",\"kind\":\"object\",\"type\":\"Entreprise\",\"relationName\":\"CompanyModeleDocumentToEntreprise\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ModeleCreatedBy\"}],\"dbName\":\"modeles_document\"},\"CompanyPeriodePaie\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateDebut\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_debut\"},{\"name\":\"dateFin\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_fin\"},{\"name\":\"estCloturee\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"est_cloturee\"},{\"name\":\"dateReglement\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_reglement\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"entrepriseId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"entreprise_id\"},{\"name\":\"creeLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cree_le\"},{\"name\":\"modifieLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"modifie_le\"},{\"name\":\"entreprise\",\"kind\":\"object\",\"type\":\"Entreprise\",\"relationName\":\"CompanyPeriodePaieToEntreprise\"},{\"name\":\"payRuns\",\"kind\":\"object\",\"type\":\"CompanyPayRun\",\"relationName\":\"CompanyPayRunToCompanyPeriodePaie\"}],\"dbName\":\"periodes_paie\"},\"CompanyConfigurationPaie\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"entrepriseId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"entreprise_id\"},{\"name\":\"jourPaie\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"jour_paie\"},{\"name\":\"periodeCalcul\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"periode_calcul\"},{\"name\":\"regleArrondi\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"regle_arrondi\"},{\"name\":\"deviseSecondaire\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"devise_secondaire\"},{\"name\":\"tauxChange\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"taux_change\"},{\"name\":\"formatNumeration\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"format_numeration\"},{\"name\":\"regleValidation\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"regle_validation\"},{\"name\":\"parametresCalcul\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"parametres_calcul\"},{\"name\":\"modifieLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"modifie_le\"},{\"name\":\"entreprise\",\"kind\":\"object\",\"type\":\"Entreprise\",\"relationName\":\"CompanyConfigurationPaieToEntreprise\"},{\"name\":\"reglesDeduction\",\"kind\":\"object\",\"type\":\"CompanyRegleDeduction\",\"relationName\":\"CompanyConfigurationPaieToCompanyRegleDeduction\"}],\"dbName\":\"configurations_paie\"},\"CompanyHistoriqueSalaire\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employeId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"employe_id\"},{\"name\":\"ancienSalaire\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"ancien_salaire\"},{\"name\":\"nouveauSalaire\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"nouveau_salaire\"},{\"name\":\"dateEffet\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_effet\"},{\"name\":\"motif\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documents\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"modifiePar\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"modifie_par\"},{\"name\":\"creeLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cree_le\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"CompanyHistoriqueSalaireToEmployee\"},{\"name\":\"modifier\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SalaryModifiedBy\"}],\"dbName\":\"historique_salaires\"},\"CompanyRegleDeduction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"formule\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conditionsApplication\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"estObligatoire\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"est_obligatoire\"},{\"name\":\"ordre\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"configurationId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"configuration_id\"},{\"name\":\"estActif\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"est_actif\"},{\"name\":\"creeLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cree_le\"},{\"name\":\"modifieLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"modifie_le\"},{\"name\":\"configuration\",\"kind\":\"object\",\"type\":\"CompanyConfigurationPaie\",\"relationName\":\"CompanyConfigurationPaieToCompanyRegleDeduction\"}],\"dbName\":\"regles_deduction\"},\"Pointage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employeId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"employe_id\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"heureArrivee\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"heure_arrivee\"},{\"name\":\"heureDepart\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"heure_depart\"},{\"name\":\"statut\",\"kind\":\"enum\",\"type\":\"StatutPointage\"},{\"name\":\"typePointage\",\"kind\":\"enum\",\"type\":\"TypePointage\",\"dbName\":\"type_pointage\"},{\"name\":\"commentaire\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ip_address\"},{\"name\":\"deviceInfo\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"device_info\"},{\"name\":\"validePar\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"valide_par\"},{\"name\":\"dateValidation\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_validation\"},{\"name\":\"creeLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cree_le\"},{\"name\":\"modifieLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"modifie_le\"},{\"name\":\"employe\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToPointage\"},{\"name\":\"validateur\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PointageValidateur\"}],\"dbName\":\"pointages\"},\"ReglePointage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"entrepriseId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"entreprise_id\"},{\"name\":\"heureDebut\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"heure_debut\"},{\"name\":\"heureFin\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"heure_fin\"},{\"name\":\"toleranceRetard\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"tolerance_retard\"},{\"name\":\"toleranceDepart\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"tolerance_depart\"},{\"name\":\"joursTravail\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"jours_travail\"},{\"name\":\"heuresParJour\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"heures_par_jour\"},{\"name\":\"heuresSupAutorise\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"heures_sup_autorise\"},{\"name\":\"seuilHeuresSup\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"seuil_heures_sup\"},{\"name\":\"pauseDejeuner\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"pause_dejeuner\"},{\"name\":\"estFlexible\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"est_flexible\"},{\"name\":\"plageHoraireMin\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"plage_horaire_min\"},{\"name\":\"plageHoraireMax\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"plage_horaire_max\"},{\"name\":\"joursFeries\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"jours_feries\"},{\"name\":\"modifieLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"modifie_le\"},{\"name\":\"entreprise\",\"kind\":\"object\",\"type\":\"Entreprise\",\"relationName\":\"EntrepriseToReglePointage\"}],\"dbName\":\"regles_pointage\"},\"Absence\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employeId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"employe_id\"},{\"name\":\"typeAbsence\",\"kind\":\"enum\",\"type\":\"TypeAbsence\",\"dbName\":\"type_absence\"},{\"name\":\"dateDebut\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_debut\"},{\"name\":\"dateFin\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_fin\"},{\"name\":\"motif\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statut\",\"kind\":\"enum\",\"type\":\"StatutAbsence\"},{\"name\":\"joursOuvres\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"jours_ouvres\"},{\"name\":\"heuresAbsence\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"heures_absence\"},{\"name\":\"commentaire\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pieceJointe\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"piece_jointe\"},{\"name\":\"approuvePar\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"approuve_par\"},{\"name\":\"dateApprobation\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"date_approbation\"},{\"name\":\"creeLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"cree_le\"},{\"name\":\"modifieLe\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"modifie_le\"},{\"name\":\"employe\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"AbsenceToEmployee\"},{\"name\":\"approbateur\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AbsenceApprobateur\"}],\"dbName\":\"absences\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

